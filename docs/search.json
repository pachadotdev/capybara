[{"path":[]},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement . complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"../capybara/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"../capybara/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to capybara","title":"Contributing to capybara","text":"outlines propose change capybara. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"../capybara/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to capybara","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"../capybara/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to capybara","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"../capybara/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to capybara","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"../capybara/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to capybara","text":"Please note capybara project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"../capybara/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"../capybara/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"../capybara/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"../capybara/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"../capybara/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"../capybara/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"../capybara/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"../capybara/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"../capybara/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"../capybara/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"../capybara/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":[]},{"path":"../capybara/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauricio Vargas Sepulveda. Author, maintainer. Yoto Yotov. Contributor.","code":""},{"path":"../capybara/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vargas Sepulveda M (2025). capybara: Fast Memory Efficient Fitting Linear Models High-Dimensional Fixed Effects. R package version 2.0.0, https://pacha.dev/capybara/.","code":"@Manual{,   title = {capybara: Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects},   author = {Mauricio {Vargas Sepulveda}},   year = {2025},   note = {R package version 2.0.0},   url = {https://pacha.dev/capybara/}, }"},{"path":[]},{"path":"../capybara/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"tldr; 2-4GB dataset need estimate (generalized) linear model large number fixed effects, package . works larger datasets well facilites computing clustered standard errors. ‘capybara’ fast small footprint software provides efficient functions demeaning variables conducting GLM estimation. technique particularly useful estimating linear models multiple group fixed effects. fork excellent Alpaca package created maintained Dr. Amrei Stammann. software can estimate Exponential Family models (e.g., Poisson) Negative Binomial models. Traditional QR estimation can unfeasible due additional memory requirements. method, based Halperin (1962) vector projections offers important time memory savings without compromising numerical stability estimation process. software heavily borrows Gaure (2013) Stammann (2018) works OLS GLM estimation large fixed effects implemented ‘lfe’ ‘alpaca’ packages. differences ‘capybara’ use C Rcpp code, instead uses cpp11 cpp11armadillo. summary tables borrow Stata outputs. also provided integrations ‘broom’ facilitate inclusion statistical tables Quarto/Jupyter notebooks. software useful , please consider donating Buy Coffee. donations used continue improving capybara.","code":""},{"path":"../capybara/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"can install development version capybara like :","code":"remotes::install_github(\"pachadotdev/capybara\")"},{"path":"../capybara/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"See documentation: https://pacha.dev/capybara/. simple example estimating linear model Poisson model fixed effects:","code":"m1 <- felm(mpg ~ wt | cyl, mtcars) m2 <- fepoisson(mpg ~ wt | cyl, mtcars) summary_table(m1, m2, model_names = c(\"Linear\", \"Poisson\"))  |     Variable     |       Linear        |      Poisson      | |------------------|---------------------|-------------------| | wt               |           -3.206*** |           -0.180* | |                  |             (0.295) |           (0.072) | |                  |                     |                   | | Fixed effects    |                     |                   | | cyl              |                 Yes |               Yes | |                  |                     |                   | | N                |                  32 |                32 | | R-squared        |               0.837 |             0.616 |  Standard errors in parenthesis Significance levels: *** p < 0.001; ** p < 0.01; * p < 0.05; . p < 0.1"},{"path":"../capybara/index.html","id":"design-choices","dir":"","previous_headings":"","what":"Design choices","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"Capybara full trade-offs. used ‘data.table’ benefit -place modifications. model fitting done C++ side. code aims fast, prefer bottlenecks instead low numerical stability reinvent wheel. Armadillo works great size data models use research. principle : “gives code safety code speed deserves neither.” (Wickham, 2014).","code":""},{"path":"../capybara/index.html","id":"benchmarks","dir":"","previous_headings":"","what":"Benchmarks","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"Median time memory footprint different models book Advanced Guide Trade Policy Analysis.","code":""},{"path":"../capybara/index.html","id":"changing-the-number-of-cores","dir":"","previous_headings":"","what":"Changing the number of cores","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"Note can use Sys.setenv(CAPYBARA_NCORES = 4) (positive integers) change number cores capybara uses, example affects performance","code":""},{"path":"../capybara/index.html","id":"installing-with-compiler-optimizations","dir":"","previous_headings":"","what":"Installing with compiler optimizations","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"CRAN packages built -O2 compiler flag, sufficient packages, including capybara. However, want use maximum compiler optimizations, can setting -O3 compiler flag. , create user Makevars file home directory (~/.R/Makevars) add following lines: Additional optimizations can enabled setting CAPYBARA_PORTABLE environment variable \"\" installing package. enable hardware-specific compiler flags can significantly improve performance (sometimes 2-4x faster just using portable flags). determine hardware allows hardware-specific compiler flags provide significant performance improvements (sometimes 2-4x faster just using portable flags).","code":"# Copy to ~/.R/Makevars if you want to override R's default optimization CXXFLAGS = -O3 CXX11FLAGS = -O3 CXX14FLAGS = -O3 CXX17FLAGS = -O3 CXX20FLAGS = -O3 Sys.setenv(CAPYBARA_OPTIMIZATIONS = \"yes\")  # CRAN version install.packages(\"capybara\", type = \"source\")  # Local version install.packages(\".\", repos = NULL, type = \"source\") # or devtools::install()"},{"path":"../capybara/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"Please note capybara project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"../capybara/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Fast and Memory Efficient Fitting of Linear Models with High-Dimensional Fixed Effects","text":"Thanks lot Prof. Yoto Yotov reviewing summary functions.","code":""},{"path":"../capybara/reference/apes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"apes post-estimation routine can used estimate average partial effects respect covariates model corresponding covariance matrix. estimation covariance based linear approximation (delta method) plus optional finite population correction. Note command automatically determines regressors binary non-binary. Remark: routine currently allow compute average partial effects based functional forms like interactions polynomials.","code":""},{"path":"../capybara/reference/apes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"","code":"apes(   object = NULL,   n_pop = NULL,   panel_structure = c(\"classic\", \"network\"),   sampling_fe = c(\"independence\", \"unrestricted\"),   weak_exo = FALSE )"},{"path":"../capybara/reference/apes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"object object class \"bias_corr\" \"feglm\"; currently restricted binomial. n_pop unsigned integer indicating finite population correction estimation covariance matrix average partial effects proposed Cruz-Gonzalez, Fernández-Val, Weidner (2017). correction factor computed follows: \\((n^{\\ast} - n) / (n^{\\ast} - 1)\\), \\(n^{\\ast}\\) \\(n\\) sizes entire population full sample size. Default NULL, refers factor zero covariance obtained delta method. panel_structure string equal \"classic\" \"network\" determines structure panel used. \"classic\" denotes panel structures example cross-sectional units observed several times (includes pseudo panels). \"network\" denotes panel structures example bilateral trade flows observed several time periods. Default \"classic\". sampling_fe string equal \"independence\" \"unrestricted\" imposes sampling assumptions unobserved effects. \"independence\" imposes unobserved effects independent sequences. \"unrestricted\" impose sampling assumptions. Note option affects optional finite population correction. Default \"independence\". weak_exo logical indicating regressors assumed weakly exogenous (e.g. predetermined). object class \"bias_corr\", option automatically set TRUE chosen bandwidth parameter larger zero. Note option affects estimation covariance matrix. Default FALSE, assumes regressors strictly exogenous.","code":""},{"path":"../capybara/reference/apes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"function apes returns named list class \"apes\".","code":""},{"path":"../capybara/reference/apes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"Cruz-Gonzalez, M., . Fernández-Val, M. Weidner (2017). \"Bias corrections probit logit models two-way fixed effects\". Stata Journal, 17(3), 517-545. Czarnowske, D. . Stammann (2020). \"Fixed Effects Binary Choice Models: Estimation Inference Long Panels\". ArXiv e-prints. Fernández-Val, . M. Weidner (2016). \"Individual time effects nonlinear panel models large N, T\". Journal Econometrics, 192(1), 291-312. Fernández-Val, . M. Weidner (2018). \"Fixed effects estimation large-t panel data models\". Annual Review Economics, 10, 109-138. Hinz, J., . Stammann, J. Wanner (2020). \"State Dependence Unobserved Heterogeneity Extensive Margin Trade\". ArXiv e-prints. Neyman, J. E. L. Scott (1948). \"Consistent estimates based partially consistent observations\". Econometrica, 16(1), 1-32.","code":""},{"path":[]},{"path":"../capybara/reference/apes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute average partial effects after fitting binary choice models with a 1,2,3-way error component — apes","text":"","code":"mtcars2 <- mtcars mtcars2$mpg01 <- ifelse(mtcars2$mpg > mean(mtcars2$mpg), 1L, 0L)  # Fit 'feglm()' mod <- feglm(mpg01 ~ wt | cyl, mtcars2, family = binomial())  # Compute average partial effects mod_ape <- apes(mod) summary(mod_ape) #> Estimates: #>    Estimate Std. Error z value Pr(>|z|)     #> wt -0.14679    0.01586  -9.258   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # Apply analytical bias correction mod_bc <- bias_corr(mod) summary(mod_bc) #> Formula: mpg01 ~ wt | cyl #> <environment: 0x556ac733f840> #>  #> Family: Binomial #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|)   | #> |----|----------|------------|---------|------------| #> | wt |  -4.7290 |     0.5897 | -8.0194 | 0.0000 *** | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20   # Compute bias-corrected average partial effects mod_ape_bc <- apes(mod_bc) summary(mod_ape_bc) #> Estimates: #>      Estimate Std. Error    z value Pr(>|z|)     #> wt -3.246e+07  5.787e-03 -5.609e+09   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"../capybara/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoplot method for feglm objects — autoplot.feglm","title":"Autoplot method for feglm objects — autoplot.feglm","text":"Extracts estimated coefficients confidence intervals. Extracts estimated coefficients confidence","code":""},{"path":"../capybara/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoplot method for feglm objects — autoplot.feglm","text":"","code":"# S3 method for class 'feglm' autoplot(object, ...)  # S3 method for class 'felm' autoplot(object, ...)"},{"path":"../capybara/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoplot method for feglm objects — autoplot.feglm","text":"object fitted model object. ... Additional arguments passed method. case, additional argument conf_level, confidence level confidence interval.","code":""},{"path":"../capybara/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autoplot method for feglm objects — autoplot.feglm","text":"ggplot object estimated coefficients confidence intervals. ggplot object estimated coefficients confidence intervals.","code":""},{"path":"../capybara/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autoplot method for feglm objects — autoplot.feglm","text":"","code":"mod <- fepoisson(mpg ~ wt + drat | cyl, mtcars) autoplot(mod, conf_level = 0.99)   mod <- felm(mpg ~ wt + drat | cyl, mtcars) autoplot(mod, conf_level = 0.90)"},{"path":"../capybara/reference/bias_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"Post-estimation routine substantially reduce incidental parameter bias problem. Applies analytical bias correction derived Fernández-Val Weidner (2016) Hinz, Stammann, Wanner (2020) obtain bias-corrected estimates structural parameters currently restricted binomial 1,2,3-way fixed effects.","code":""},{"path":"../capybara/reference/bias_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"","code":"bias_corr(object = NULL, l = 0L, panel_structure = c(\"classic\", \"network\"))"},{"path":"../capybara/reference/bias_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"object object class \"feglm\". l unsigned integer indicating bandwidth estimation spectral densities proposed Hahn Kuersteiner (2011). default zero, used regressors assumed strictly exogenous respect idiosyncratic error term. presence weakly exogenous regressors, e.g. lagged outcome variables, suggest choose bandwidth one four. Note order factors partialed important bandwidths larger zero. panel_structure string equal \"classic\" \"network\" determines structure panel used. \"classic\" denotes panel structures example cross-sectional units observed several times (includes pseudo panels). \"network\" denotes panel structures example bilateral trade flows observed several time periods. Default \"classic\".","code":""},{"path":"../capybara/reference/bias_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"named list classes \"bias_corr\" \"feglm\".","code":""},{"path":"../capybara/reference/bias_corr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"Czarnowske, D. . Stammann (2020). \"Fixed Effects Binary Choice Models: Estimation Inference Long Panels\". ArXiv e-prints. Fernández-Val, . M. Weidner (2016). \"Individual time effects nonlinear panel models large N, T\". Journal Econometrics, 192(1), 291-312. Fernández-Val, . M. Weidner (2018). \"Fixed effects estimation large-t panel data models\". Annual Review Economics, 10, 109-138. Hahn, J. G. Kuersteiner (2011). \"Bias reduction dynamic nonlinear panel models fixed effects\". Econometric Theory, 27(6), 1152-1191. Hinz, J., . Stammann, J. Wanner (2020). \"State Dependence Unobserved Heterogeneity Extensive Margin Trade\". ArXiv e-prints. Neyman, J. E. L. Scott (1948). \"Consistent estimates based partially consistent observations\". Econometrica, 16(1), 1-32.","code":""},{"path":[]},{"path":"../capybara/reference/bias_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asymptotic bias correction after fitting binary choice models with a 1,2,3-way error component — bias_corr","text":"","code":"mtcars2 <- mtcars mtcars2$mpg01 <- ifelse(mtcars2$mpg > mean(mtcars2$mpg), 1L, 0L)  # Fit 'feglm()' mod <- feglm(mpg01 ~ wt | cyl, mtcars2, family = binomial())  # Apply analytical bias correction mod_bc <- bias_corr(mod) summary(mod_bc) #> Formula: mpg01 ~ wt | cyl #> <environment: 0x556ac3ee8a70> #>  #> Family: Binomial #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|) | #> |----|----------|------------|---------|----------| #> | wt |  -4.7290 |     3.7020 | -1.2774 |   0.2015 | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: 0 1072693248 0 0 -1758517812 1075633340 0 0 0 1072693248 1314299939 1071471673 0 0 0 0 0 1072693248 -1073209064 21866"},{"path":"../capybara/reference/broom.html","id":null,"dir":"Reference","previous_headings":"","what":"Broom Integration — augment.feglm","title":"Broom Integration — augment.feglm","text":"provided broom methods following: augment: Takes input data adds additional columns fitted values residuals. glance: Extracts deviance, null deviance, number observations.` tidy: Extracts estimated coefficients standard errors.","code":""},{"path":"../capybara/reference/broom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broom Integration — augment.feglm","text":"","code":"# S3 method for class 'feglm' augment(x, newdata = NULL, ...)  # S3 method for class 'felm' augment(x, newdata = NULL, ...)  # S3 method for class 'feglm' glance(x, ...)  # S3 method for class 'felm' glance(x, ...)  # S3 method for class 'feglm' tidy(x, conf_int = FALSE, conf_level = 0.95, ...)  # S3 method for class 'felm' tidy(x, conf_int = FALSE, conf_level = 0.95, ...)"},{"path":"../capybara/reference/broom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broom Integration — augment.feglm","text":"x fitted model object. newdata Optional argument use data different data used fit model. ... Additional arguments passed method. conf_int Logical indicating whether include confidence interval. conf_level confidence level confidence interval.","code":""},{"path":"../capybara/reference/broom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broom Integration — augment.feglm","text":"tibble respective information augment, glance, tidy methods.","code":""},{"path":"../capybara/reference/broom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broom Integration — augment.feglm","text":"","code":"mod <- fepoisson(mpg ~ wt | cyl, mtcars) broom::augment(mod) #> Registered S3 methods overwritten by 'broom': #>   method       from     #>   augment.felm capybara #>   glance.felm  capybara #>   tidy.felm    capybara #> # A tibble: 32 × 3 #>      mpg    wt cyl   #>    <dbl> <dbl> <fct> #>  1  21    2.62 6     #>  2  21    2.88 6     #>  3  22.8  2.32 4     #>  4  21.4  3.22 6     #>  5  18.7  3.44 8     #>  6  18.1  3.46 6     #>  7  14.3  3.57 8     #>  8  24.4  3.19 4     #>  9  22.8  3.15 4     #> 10  19.2  3.44 6     #> # ℹ 22 more rows broom::glance(mod) #> Error in data.frame(deviance = deviance, null_deviance = null.deviance,     nobs_full = nobs[\"nobs_full\"], nobs_na = nobs[\"nobs_na\"],     nobs_pc = nobs[\"nobs_pc\"], nobs = nobs[\"nobs\"]): arguments imply differing number of rows: 7, 0, 1 broom::tidy(mod) #> # A tibble: 1 × 4 #>   estimate std.error statistic p.value #> *    <dbl>     <dbl>     <dbl>   <dbl> #> 1   -0.180    0.0716     -2.51  0.0120"},{"path":"../capybara/reference/capybara-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Models (GLMs) with high-dimensional k-way fixed effects — capybara-package","title":"Generalized Linear Models (GLMs) with high-dimensional k-way fixed effects — capybara-package","text":"Provides routine partial factors many levels optimization log-likelihood function corresponding GLM. package based algorithm described Stammann (2018). also offers efficient algorithm recover estimates fixed effects post-estimation routine includes robust multi-way clustered standard errors. package provides analytical bias corrections binary choice models derived Fernández-Val Weidner (2016) Hinz, Stammann, Wanner (2020). package ground rewrite multiple refactors, optimizations, new features compared original package alpaca. current state, package stable future changes limited bug fixes improvements, altering functions' arguments outputs.","code":""},{"path":[]},{"path":"../capybara/reference/capybara-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized Linear Models (GLMs) with high-dimensional k-way fixed effects — capybara-package","text":"Maintainer: Mauricio Vargas Sepulveda m.sepulveda@mail.utoronto.ca (ORCID) contributors: Yoto Yotov [contributor]","code":""},{"path":"../capybara/reference/feglm.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM fitting with high-dimensional k-way fixed effects — feglm","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"feglm can used fit generalized linear models many high-dimensional fixed effects. estimation procedure based unconditional maximum likelihood can interpreted “weighted demeaning” approach. Remark: term fixed effect used econometrician's sense intercepts level category.","code":""},{"path":"../capybara/reference/feglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"","code":"feglm(   formula = NULL,   data = NULL,   family = gaussian(),   weights = NULL,   beta_start = NULL,   eta_start = NULL,   control = NULL )"},{"path":"../capybara/reference/feglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"formula object class \"formula\": symbolic description model fitted. formula must type y ~ X | k, second part formula refers factors concentrated . also possible pass clustering variables feglm y ~ X | k | c. data object class \"data.frame\" containing variables model. expected input dataset variables specified formula number rows least equal number variables model. family link function used model. Similar glm.fit result call family function. Default gaussian(). See family details family functions. weights optional string name 'prior weights' variable data. beta_start optional vector starting values structural parameters linear predictor. Default \\(\\boldsymbol{\\beta} = \\mathbf{0}\\). eta_start optional vector starting values linear predictor. control named list parameters controlling fitting process. See fit_control details.","code":""},{"path":"../capybara/reference/feglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"named list class \"feglm\". list contains following fifteen elements: coefficients named vector estimated coefficients eta vector linear predictor weights vector weights used estimation hessian matrix numerical second derivatives deviance deviance model null_deviance null deviance model conv logical indicating whether model converged iter number iterations needed converge nobs named vector number observations used estimation indicating dropped perfectly predicted observations fe_levels named vector number levels fixed effects nms_fe list names fixed effects variables formula formula used model data data used model dropping non-contributing observations family family used model control control list used model","code":""},{"path":"../capybara/reference/feglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"feglm converge often sign linear dependence one regressors fixed effects category. case, carefully inspect model specification.","code":""},{"path":"../capybara/reference/feglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"Gaure, S. (2013). \"OLS Multiple High Dimensional Category Variables\". Computational Statistics Data Analysis, 66. Marschner, . (2011). \"glm2: Fitting generalized linear models convergence problems\". R Journal, 3(2). Stammann, ., F. Heiss, D. McFadden (2016). \"Estimating Fixed Effects Logit Models Large Panel Data\". Working paper. Stammann, . (2018). \"Fast Feasible Estimation Generalized Linear Models High-Dimensional k-Way Fixed Effects\". ArXiv e-prints.","code":""},{"path":"../capybara/reference/feglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM fitting with high-dimensional k-way fixed effects — feglm","text":"","code":"mod <- feglm(mpg ~ wt | cyl, mtcars, family = poisson(link = \"log\")) summary(mod) #> Formula: mpg ~ wt | cyl #> <environment: 0x556ac9a1f510> #>  #> Family: Poisson #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|) | #> |----|----------|------------|---------|----------| #> | wt |  -0.1799 |     0.0716 | -2.5127 | 0.0120 * | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Pseudo R-squared: 0.62  #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: -962414312 21866 -965493576 21866   mod <- feglm(mpg ~ wt | cyl | am, mtcars, family = poisson(link = \"log\")) summary(mod, type = \"clustered\") #> Formula: mpg ~ wt | cyl | am #> <environment: 0x556ac9a1f510> #>  #> Family: Poisson #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|) | #> |----|----------|------------|---------|----------| #> | wt |  -0.1799 |     0.3700 | -0.4862 |   0.6268 | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Pseudo R-squared: 0.62  #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: -929446984 21866 -929446872 21866"},{"path":"../capybara/reference/felm.html","id":null,"dir":"Reference","previous_headings":"","what":"LM fitting with high-dimensional k-way fixed effects — felm","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"wrapper feglm family = gaussian().","code":""},{"path":"../capybara/reference/felm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"","code":"felm(formula = NULL, data = NULL, weights = NULL, control = NULL)"},{"path":"../capybara/reference/felm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"formula object class \"formula\": symbolic description model fitted. formula must type y ~ X | k, second part formula refers factors concentrated . also possible pass clustering variables feglm y ~ X | k | c. data object class \"data.frame\" containing variables model. expected input dataset variables specified formula number rows least equal number variables model. weights optional string name 'prior weights' variable data. control named list parameters controlling fitting process. See fit_control details.","code":""},{"path":"../capybara/reference/felm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"named list class \"felm\". list contains following eleven elements: coefficients named vector estimated coefficients fitted_values vector estimated dependent variable weights vector weights used estimation hessian matrix numerical second derivatives null_deviance null deviance model nobs named vector number observations used estimation indicating dropped perfectly predicted observations fe_levels named vector number levels fixed effect nms_fe list names fixed effects variables formula formula used model data data used model dropping non-contributing observations control control list used model","code":""},{"path":"../capybara/reference/felm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"Gaure, S. (2013). \"OLS Multiple High Dimensional Category Variables\". Computational Statistics Data Analysis, 66. Marschner, . (2011). \"glm2: Fitting generalized linear models convergence problems\". R Journal, 3(2). Stammann, ., F. Heiss, D. McFadden (2016). \"Estimating Fixed Effects Logit Models Large Panel Data\". Working paper. Stammann, . (2018). \"Fast Feasible Estimation Generalized Linear Models High-Dimensional k-Way Fixed Effects\". ArXiv e-prints.","code":""},{"path":"../capybara/reference/felm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LM fitting with high-dimensional k-way fixed effects — felm","text":"","code":"# check the feglm examples for the details about clustered standard errors mod <- felm(log(mpg) ~ log(wt) | cyl, mtcars) summary(mod) #> Formula: log(mpg) ~ log(wt) | cyl #> <environment: 0x556ac47c01e0> #>  #> Estimates: #>  #> |         | Estimate | Std. Error | z value | Pr(>|z|) | #> |---------|----------|------------|---------|----------| #> | log(wt) |  -0.5623 |     0.9512 | -0.5911 |   0.5545 | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> R-squared     : -8.259  #> Adj. R-squared: -8.898  #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0"},{"path":"../capybara/reference/fenegbin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","title":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","text":"routine uses internals feglm.","code":""},{"path":"../capybara/reference/fenegbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","text":"","code":"fenegbin(   formula = NULL,   data = NULL,   weights = NULL,   beta_start = NULL,   eta_start = NULL,   init_theta = NULL,   link = c(\"log\", \"identity\", \"sqrt\"),   control = NULL )"},{"path":"../capybara/reference/fenegbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","text":"formula object class \"formula\": symbolic description model fitted. formula must type y ~ X | k, second part formula refers factors concentrated . also possible pass clustering variables feglm y ~ X | k | c. data object class \"data.frame\" containing variables model. expected input dataset variables specified formula number rows least equal number variables model. weights optional string name 'prior weights' variable data. beta_start optional vector starting values structural parameters linear predictor. Default \\(\\boldsymbol{\\beta} = \\mathbf{0}\\). eta_start optional vector starting values linear predictor. init_theta optional initial value theta parameter (see glm.nb). link link function. Must one \"log\", \"sqrt\", \"identity\". control named list parameters controlling fitting process. See fit_control details.","code":""},{"path":"../capybara/reference/fenegbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","text":"named list class \"feglm\". list contains following eighteen elements: coefficients named vector estimated coefficients eta vector linear predictor weights vector weights used estimation hessian matrix numerical second derivatives deviance deviance model null_deviance null deviance model conv logical indicating whether model converged iter number iterations needed converge theta estimated theta parameter iter_outer number outer iterations conv_outer logical indicating whether outer loop converged nobs named vector number observations used estimation indicating dropped perfectly predicted observations fe_levels named vector number levels fixed effects nms_fe list names fixed effects variables formula formula used model data data used model dropping non-contributing observations family family used model control control list used model","code":""},{"path":"../capybara/reference/fenegbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Binomial model fitting with high-dimensional k-way fixed effects — fenegbin","text":"","code":"# check the feglm examples for the details about clustered standard errors mod <- fenegbin(mpg ~ wt | cyl, mtcars) summary(mod) #> Formula: mpg ~ wt | cyl #> <environment: 0x556ac68ebf98> #>  #> Family: Negative Binomial(24.478) #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|) | #> |----|----------|------------|---------|----------| #> | wt |  -0.1762 |     0.0944 | -1.8673 | 0.0619 . | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: 4 #> Number of outer iterations: 3 #> theta= 24.48, std. error= NULL"},{"path":"../capybara/reference/fepoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","title":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","text":"wrapper feglm family = poisson().","code":""},{"path":"../capybara/reference/fepoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","text":"","code":"fepoisson(   formula = NULL,   data = NULL,   weights = NULL,   beta_start = NULL,   eta_start = NULL,   control = NULL )"},{"path":"../capybara/reference/fepoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","text":"formula object class \"formula\": symbolic description model fitted. formula must type y ~ X | k, second part formula refers factors concentrated . also possible pass clustering variables feglm y ~ X | k | c. data object class \"data.frame\" containing variables model. expected input dataset variables specified formula number rows least equal number variables model. weights optional string name 'prior weights' variable data. beta_start optional vector starting values structural parameters linear predictor. Default \\(\\boldsymbol{\\beta} = \\mathbf{0}\\). eta_start optional vector starting values linear predictor. control named list parameters controlling fitting process. See fit_control details.","code":""},{"path":"../capybara/reference/fepoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","text":"named list class \"feglm\".","code":""},{"path":"../capybara/reference/fepoisson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poisson model fitting high-dimensional with k-way fixed effects — fepoisson","text":"","code":"# check the feglm examples for the details about clustered standard errors mod <- fepoisson(mpg ~ wt | cyl, mtcars) summary(mod) #> Formula: mpg ~ wt | cyl #> <environment: 0x556ac8b1b800> #>  #> Family: Poisson #>  #> Estimates: #>  #> |    | Estimate | Std. Error | z value | Pr(>|z|) | #> |----|----------|------------|---------|----------| #> | wt |  -0.1799 |     0.0716 | -2.5127 | 0.0120 * | #>  #> Significance codes: *** 99.9%; ** 99%; * 95%; . 90% #>  #> Pseudo R-squared: 0.62  #>  #> Number of observations: Full 32; Missing 0; Perfect classification 0  #>  #> Number of Fisher Scoring iterations: -1073216976 21866 -935062128 21866"},{"path":"../capybara/reference/fit_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Set feglm Control Parameters — fit_control","title":"Set feglm Control Parameters — fit_control","text":"Set change parameters used fitting feglm. Termination conditions similar glm.","code":""},{"path":"../capybara/reference/fit_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set feglm Control Parameters — fit_control","text":"","code":"fit_control(   dev_tol = 1e-06,   center_tol = 1e-06,   collin_tol = 1e-07,   step_halving_factor = 0.5,   alpha_tol = 1e-06,   iter_max = 25L,   iter_center_max = 10000L,   iter_inner_max = 50L,   iter_alpha_max = 10000L,   iter_interrupt = 1000L,   iter_ssr = 10L,   return_fe = TRUE,   keep_tx = FALSE )"},{"path":"../capybara/reference/fit_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set feglm Control Parameters — fit_control","text":"dev_tol tolerance level first stopping condition maximization routine. stopping condition based relative change deviance iteration \\(r\\) can expressed follows: \\(|dev_{r} - dev_{r - 1}| / (0.1 + |dev_{r}|) < tol\\). default 1.0e-08. center_tol tolerance level stopping condition centering algorithm. stopping condition based relative change centered variable similar 'lfe' package. default 1.0e-08. collin_tol tolerance level detecting collinearity. default 1.0e-07. step_halving_factor numeric indicating factor step size halved iterate towards convergence. used control step size optimization. default 0.5. alpha_tol tolerance fixed effects (alpha) convergence. default 1.0e-06. iter_max unsigned integer indicating maximum number iterations maximization routine. default 25L. iter_center_max unsigned integer indicating maximum number iterations centering algorithm. default 10000L. iter_inner_max unsigned integer indicating maximum number iterations inner loop centering algorithm. default 50L. iter_alpha_max maximum iterations fixed effects computation. default 10000L. iter_interrupt unsigned integer indicating maximum number iterations algorithm interrupted. default 1000L. iter_ssr unsigned integer indicating number iterations skip checking sum squared residuals improves. default 10L. return_fe logical indicating fixed effects returned. can useful fitting general equilibrium models skipping fixed effects intermediate steps speeds computation. default TRUE applies feglm class. keep_tx logical indicating centered regressor matrix stored. centered regressor matrix required covariance estimators, bias corrections, average partial effects. option saves computation time cost memory. default TRUE.","code":""},{"path":"../capybara/reference/fit_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set feglm Control Parameters — fit_control","text":"named list control parameters.","code":""},{"path":[]},{"path":"../capybara/reference/fit_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set feglm Control Parameters — fit_control","text":"","code":"fit_control(0.05, 0.05, 10L, 10L, TRUE, TRUE, TRUE) #> $dev_tol #> [1] 0.05 #>  #> $demean_tol #> [1] 0.05 #>  #> $collin_tol #> [1] 10 #>  #> $iter_max #> [1] 10 #>  #> $iter_max_cluster #> [1] 1 #>  #> $iter_full_dicho #> [1] 1 #>  #> $iter_demean_max #> [1] 1 #>  #> $iter_inner_max #> [1] 50 #>  #> $iter_interrupt #> [1] 1000 #>  #> $iter_ssr #> [1] 10 #>  #> $direct_qr_threshold #> [1] 0.9 #>  #> $qr_collin_tol_multiplier #> [1] 1e-07 #>  #> $chol_stability_threshold #> [1] 1e-12 #>  #> $safe_division_min #> [1] 1e-12 #>  #> $safe_log_min #> [1] 1e-12 #>  #> $newton_raphson_tol #> [1] 1e-08 #>  #> $demean_extra_projections #> [1] 0 #>  #> $demean_warmup_iterations #> [1] 5 #>  #> $demean_projections_after_acc #> [1] 5 #>  #> $demean_grand_acc_frequency #> [1] 20 #>  #> $demean_ssr_check_frequency #> [1] 40 #>  #> $demean_2fe_max_iter #> [1] 100 #>  #> $demean_2fe_tolerance #> [1] 1e-12 #>  #> $irons_tuck_eps #> [1] 1e-14 #>  #> $alpha_convergence_tol #> [1] 1e-08 #>  #> $alpha_iter_max #> [1] 10000 #>  #> $rel_tol_denom #> [1] 0.1 #>  #> $convergence_iter_max #> [1] 100 #>  #> $convergence_iter_full_dicho #> [1] 10 #>  #> $step_halving_factor #> [1] 0.5 #>  #> $binomial_mu_min #> [1] 0.001 #>  #> $binomial_mu_max #> [1] 0.999 #>  #> $safe_clamp_min #> [1] 1e-15 #>  #> $safe_clamp_max #> [1] 1e+12 #>  #> $glm_init_eta #> [1] 1e-05 #>  #> $iter_nb_theta #> [1] 10 #>  #> $nb_theta_tol #> [1] 1e-06 #>  #> $nb_info_min #> [1] 1e-12 #>  #> $nb_overdispersion_threshold #> [1] 0.01 #>  #> $nb_theta_min #> [1] 0.1 #>  #> $nb_theta_max #> [1] 1e+06 #>  #> $nb_step_max_decrease #> [1] 0.1 #>  #> $nb_step_max_increase #> [1] 0.5 #>  #> $keep_dmx #> [1] FALSE #>  #> $use_weights #> [1] TRUE #>"},{"path":"../capybara/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, glance, tidy ggplot2 autoplot","code":""},{"path":"../capybara/reference/summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate formatted regression tables — summary_table","title":"Generate formatted regression tables — summary_table","text":"Generate formatted regression tables","code":""},{"path":"../capybara/reference/summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate formatted regression tables — summary_table","text":"","code":"summary_table(   ...,   coef_digits = 3,   se_digits = 3,   stars = TRUE,   latex = FALSE,   model_names = NULL )"},{"path":"../capybara/reference/summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate formatted regression tables — summary_table","text":"... One model objects felm feglm class. coef_digits Number digits coefficients. default 3. se_digits Number digits standard errors. default 3. stars Whether include significance stars. default TRUE. latex Whether output LaTeX code. default FALSE. model_names Optional vector custom model names","code":""},{"path":"../capybara/reference/summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate formatted regression tables — summary_table","text":"formatted table","code":""},{"path":"../capybara/reference/summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate formatted regression tables — summary_table","text":"","code":"m1 <- felm(mpg ~ wt | cyl, mtcars) m2 <- fepoisson(mpg ~ wt | cyl, mtcars) summary_table(m1, m2, model_names = c(\"Linear\", \"Poisson\")) #> |     Variable     |       Linear        |      Poisson      | #> |------------------|---------------------|-------------------| #> | wt               |           -3.206*** |           -0.180* | #> |                  |             (0.295) |           (0.072) | #> |                  |                     |                   | #> | Fixed effects    |                     |                   | #> | cyl              |                 Yes |               Yes | #> |                  |                     |                   | #> | N                |                  32 |                32 | #> | R-squared        |               0.837 |             0.620 | #>  #> Standard errors in parenthesis #> Significance levels: *** p < 0.001; ** p < 0.01; * p < 0.05; . p < 0.1"},{"path":"../capybara/reference/trade_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Trade Panel 1986-2006 — trade_panel","title":"Trade Panel 1986-2006 — trade_panel","text":"Aggregated exports origin-destination-year level 1986-2006.","code":""},{"path":"../capybara/reference/trade_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trade Panel 1986-2006 — trade_panel","text":"","code":"trade_panel"},{"path":[]},{"path":"../capybara/reference/trade_panel.html","id":"trade-panel","dir":"Reference","previous_headings":"","what":"trade_panel","title":"Trade Panel 1986-2006 — trade_panel","text":"data frame 14,285 rows 7 columns: trade Nominal trade flows current US dollars dist Population-weighted bilateral distance country '' 'j', kilometers cntg Indicator. Equal 1 country '' 'j' share common border lang Indicator. Equal 1 country '' 'j' speak official language clny Indicator. Equal 1 country '' 'j' share colonial relationship year Year observation exp_year Exporter ISO country code year imp_year Importer ISO country code year","code":""},{"path":"../capybara/reference/trade_panel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Trade Panel 1986-2006 — trade_panel","text":"Advanced Guide Trade Policy Analysis (ISBN: 978-92-870-4367-2)","code":""},{"path":"../capybara/reference/vcov.feglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance matrix for GLMs — vcov.feglm","title":"Covariance matrix for GLMs — vcov.feglm","text":"Covariance matrix estimator structural parameters objects returned feglm. covariance computed hessian, scores, combination convergence.","code":""},{"path":"../capybara/reference/vcov.feglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance matrix for GLMs — vcov.feglm","text":"","code":"# S3 method for class 'feglm' vcov(   object,   type = c(\"hessian\", \"outer.product\", \"sandwich\", \"clustered\"),   ... )"},{"path":"../capybara/reference/vcov.feglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance matrix for GLMs — vcov.feglm","text":"object object class \"feglm\". type type covariance estimate required. \"hessian\" refers inverse negative expected hessian convergence default option. \"outer.product\" outer-product---gradient estimator. \"sandwich\" sandwich estimator (sometimes also referred robust estimator), \"clustered\" computes clustered covariance matrix given cluster variables. ... additional arguments.","code":""},{"path":"../capybara/reference/vcov.feglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance matrix for GLMs — vcov.feglm","text":"named matrix covariance estimates. named matrix covariance estimates.","code":""},{"path":"../capybara/reference/vcov.feglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Covariance matrix for GLMs — vcov.feglm","text":"Cameron, C., J. Gelbach, D. Miller (2011). \"Robust Inference Multiway Clustering\". Journal Business & Economic Statistics 29(2).","code":""},{"path":[]},{"path":"../capybara/reference/vcov.feglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance matrix for GLMs — vcov.feglm","text":"","code":"# same as the example in feglm but extracting the covariance matrix mod <- fepoisson(mpg ~ wt | cyl | am, mtcars) round(vcov(mod, type = \"clustered\"), 5) #>        wt #> wt 0.1369"},{"path":"../capybara/reference/vcov.felm.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance matrix for LMs — vcov.felm","title":"Covariance matrix for LMs — vcov.felm","text":"Covariance matrix estimator structural parameters objects returned felm. covariance computed hessian, scores, combination convergence.","code":""},{"path":"../capybara/reference/vcov.felm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance matrix for LMs — vcov.felm","text":"","code":"# S3 method for class 'felm' vcov(   object,   type = c(\"hessian\", \"outer.product\", \"sandwich\", \"clustered\"),   ... )"},{"path":"../capybara/reference/vcov.felm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance matrix for LMs — vcov.felm","text":"object object class \"felm\". type type covariance estimate required. \"hessian\" refers inverse negative expected hessian convergence default option. \"outer.product\" outer-product---gradient estimator. \"sandwich\" sandwich estimator (sometimes also referred robust estimator), \"clustered\" computes clustered covariance matrix given cluster variables. ... additional arguments.","code":""},{"path":"../capybara/reference/vcov.felm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance matrix for LMs — vcov.felm","text":"named matrix covariance estimates.","code":""},{"path":[]},{"path":"../capybara/reference/vcov.felm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance matrix for LMs — vcov.felm","text":"","code":"# same as the example in felm but extracting the covariance matrix mod <- felm(log(mpg) ~ log(wt) | cyl | am, mtcars) vcov(mod, type = \"clustered\") #>          [,1] #> [1,] 1861.422"},{"path":"../capybara/news/index.html","id":"capybara-200","dir":"Changelog","previous_headings":"","what":"capybara 2.0.0","title":"capybara 2.0.0","text":"breaking changes, even internal code completely rewritten. computation done C++ side. Implements rank-revealing Cholesky factorisation like fixest. Returns estimated fixed effects default (option ).","code":""},{"path":"../capybara/news/index.html","id":"capybara-160","dir":"Changelog","previous_headings":"","what":"capybara 1.6.0","title":"capybara 1.6.0","text":"Handles collinearities model matrix using QR decomposition. Cholesky fails. Otherwise, estimation fails, now can return NA coefficients.","code":""},{"path":"../capybara/news/index.html","id":"capybara-140","dir":"Changelog","previous_headings":"","what":"capybara 1.4.0","title":"capybara 1.4.0","text":"Adds extended battery optional tests Poisson model. Modular code easier maintenance.","code":""},{"path":"../capybara/news/index.html","id":"capybara-130","dir":"Changelog","previous_headings":"","what":"capybara 1.3.0","title":"capybara 1.3.0","text":"Explicitly avoids Intel MKL fallbacks OpenBLAS avoid issues non reproducible results. Uses OpenMP parallelize demeaning functions, can lead significant speedups large datasets. Uses Irons-Tuck acceleration fast convergence demeaning functions.","code":""},{"path":"../capybara/news/index.html","id":"capybara-120","dir":"Changelog","previous_headings":"","what":"capybara 1.2.0","title":"capybara 1.2.0","text":"Changes fit summary functions report perfectly classified observations. Dropped linear dependence checks, leaving Cholesky decomposition handle .","code":""},{"path":"../capybara/news/index.html","id":"capybara-110","dir":"Changelog","previous_headings":"","what":"capybara 1.1.0","title":"capybara 1.1.0","text":"workhorse demeaning functions rewritten towards efficient implementation. based ppmlhdfe fixest code. Loops avoided replace efficient matrix operations.","code":""},{"path":"../capybara/news/index.html","id":"capybara-103","dir":"Changelog","previous_headings":"","what":"capybara 1.0.3","title":"capybara 1.0.3","text":"Implements ideas reghdfe/ppmlhdfe improve centering/demeaning functions.","code":""},{"path":"../capybara/news/index.html","id":"capybara-102","dir":"Changelog","previous_headings":"","what":"capybara 1.0.2","title":"capybara 1.0.2","text":"Small refactors speed.","code":""},{"path":"../capybara/news/index.html","id":"capybara-101","dir":"Changelog","previous_headings":"","what":"capybara 1.0.1","title":"capybara 1.0.1","text":"CRAN release: 2025-05-22 examples now use smaller datasets avoid CRAN timeouts Clang-ASAN.","code":""},{"path":"../capybara/news/index.html","id":"capybara-100","dir":"Changelog","previous_headings":"","what":"capybara 1.0.0","title":"capybara 1.0.0","text":"CRAN release: 2025-05-21 Implements new approach obtain rank QR decomposition without loss stability. Streamline code Pass large objects reference Use BLAS/LAPACK instead iteration operations Uses new configure file works nicely Intel MKL (.e. user need export environment variables package detect MKL).","code":""},{"path":"../capybara/news/index.html","id":"capybara-096","dir":"Changelog","previous_headings":"","what":"capybara 0.9.6","title":"capybara 0.9.6","text":"Calculates rank matrix X based singular value decomposition instead QR decomposition. efficient numerically stable.","code":""},{"path":"../capybara/news/index.html","id":"capybara-095","dir":"Changelog","previous_headings":"","what":"capybara 0.9.5","title":"capybara 0.9.5","text":"Fixes expands ‘weights’ argument fe*() functions allow different types weights. default still NULL (.e., weights equal 1). argument now admits weights passed weights = ~cyl, weights = mtcars$cyl, w <- mtcars$cyl; weights = w.","code":""},{"path":"../capybara/news/index.html","id":"capybara-094","dir":"Changelog","previous_headings":"","what":"capybara 0.9.4","title":"capybara 0.9.4","text":"Allows estimate models without fixed effects.","code":""},{"path":"../capybara/news/index.html","id":"capybara-093","dir":"Changelog","previous_headings":"","what":"capybara 0.9.3","title":"capybara 0.9.3","text":"CRAN release: 2025-04-03 Fixes tidy() method linear models (felm class). Now require load tibble package work. Adds wrapper present multiple models single table option export LaTeX.","code":""},{"path":"../capybara/news/index.html","id":"capybara-092","dir":"Changelog","previous_headings":"","what":"capybara 0.9.2","title":"capybara 0.9.2","text":"Implements Irons Tuck acceleration fast convergence.","code":""},{"path":"../capybara/news/index.html","id":"capybara-091","dir":"Changelog","previous_headings":"","what":"capybara 0.9.1","title":"capybara 0.9.1","text":"CRAN release: 2025-03-25 Fixes minor uninitialized variable C++ code used conditional check.","code":""},{"path":"../capybara/news/index.html","id":"capybara-09","dir":"Changelog","previous_headings":"","what":"capybara 0.9","title":"capybara 0.9","text":"First CRAN version Refactored functions avoid data copies: center variables crossprod GLM LM fit get alpha group sums mu eta variance iter_center_max iter_inner_max now can modified feglm_control().","code":""},{"path":"../capybara/news/index.html","id":"capybara-080","dir":"Changelog","previous_headings":"","what":"capybara 0.8.0","title":"capybara 0.8.0","text":"Dedicated functions linear models avoid overhead running GLM function Gaussian link.","code":""},{"path":"../capybara/news/index.html","id":"capybara-070","dir":"Changelog","previous_headings":"","what":"capybara 0.7.0","title":"capybara 0.7.0","text":"predict method now allows pass new data predict outcome. Fully documented code tests according rOpenSci standards.","code":""},{"path":"../capybara/news/index.html","id":"capybara-060","dir":"Changelog","previous_headings":"","what":"capybara 0.6.0","title":"capybara 0.6.0","text":"Moves heavy computation C++ using Armadillo exports results R. Previously, multiple data copies R C++ added overhead computations. previous versions returned MX default, now specified. Adds code extract fixed effects felm objects.","code":""},{"path":"../capybara/news/index.html","id":"capybara-052","dir":"Changelog","previous_headings":"","what":"capybara 0.5.2","title":"capybara 0.5.2","text":"Uses O(n log(n)) algorithm compute Kendall correlation pseudo-R2 Poisson model.","code":""},{"path":"../capybara/news/index.html","id":"capybara-051","dir":"Changelog","previous_headings":"","what":"capybara 0.5.1","title":"capybara 0.5.1","text":"Using arma::field consistently instead std::vector<std::vector<>> indices. Linear algebra changes, using arma::inv instead solving arma::qr inverse. Replaces multiple loops dedicated Armadillo functions.","code":""},{"path":"../capybara/news/index.html","id":"capybara-050","dir":"Changelog","previous_headings":"","what":"capybara 0.5.0","title":"capybara 0.5.0","text":"Avoids loops C++ code, instead uses Armadillo’s functions. O(n) computations C++ access data directly using pointers.","code":""},{"path":"../capybara/news/index.html","id":"capybara-046","dir":"Changelog","previous_headings":"","what":"capybara 0.4.6","title":"capybara 0.4.6","text":"Fixes notes tidyselect regarding use all_of(). C++ code follows consistent style. GH-Actions test gcc 4.8 anymore.","code":""},{"path":"../capybara/news/index.html","id":"capybara-045","dir":"Changelog","previous_headings":"","what":"capybara 0.4.5","title":"capybara 0.4.5","text":"Ungroups data avoid issues model matrix","code":""},{"path":"../capybara/news/index.html","id":"capybara-04","dir":"Changelog","previous_headings":"","what":"capybara 0.4","title":"capybara 0.4","text":"Uses R’s C API efficiently add bit memory optimizations","code":""},{"path":"../capybara/news/index.html","id":"capybara-035","dir":"Changelog","previous_headings":"","what":"capybara 0.3.5","title":"capybara 0.3.5","text":"Uses Mat consistently matrix operations (avoids vectors)","code":""},{"path":"../capybara/news/index.html","id":"capybara-03","dir":"Changelog","previous_headings":"","what":"capybara 0.3","title":"capybara 0.3","text":"Reduces memory footprint ~45% moving computation Armadillo’s side","code":""},{"path":"../capybara/news/index.html","id":"capybara-02","dir":"Changelog","previous_headings":"","what":"capybara 0.2","title":"capybara 0.2","text":"Includes pseudo R2 (Stata) Poisson models","code":""},{"path":"../capybara/news/index.html","id":"capybara-01","dir":"Changelog","previous_headings":"","what":"capybara 0.1","title":"capybara 0.1","text":"Initial CRAN submission.","code":""}]
