// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// 03_center_variables.cpp
doubles_matrix<> center_variables_(const doubles_matrix<>& V0, const doubles& w0, const list& klist, const double tol);
extern "C" SEXP _capybara_center_variables_(SEXP V0, SEXP w0, SEXP klist, SEXP tol) {
  BEGIN_CPP11
    return cpp11::as_sexp(center_variables_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(V0), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(w0), cpp11::as_cpp<cpp11::decay_t<const list&>>(klist), cpp11::as_cpp<cpp11::decay_t<const double>>(tol)));
  END_CPP11
}
// 04_get_alpha.cpp
list get_alpha_(const doubles& pi0, const list& klist, const double tol);
extern "C" SEXP _capybara_get_alpha_(SEXP pi0, SEXP klist, SEXP tol) {
  BEGIN_CPP11
    return cpp11::as_sexp(get_alpha_(cpp11::as_cpp<cpp11::decay_t<const doubles&>>(pi0), cpp11::as_cpp<cpp11::decay_t<const list&>>(klist), cpp11::as_cpp<cpp11::decay_t<const double>>(tol)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_capybara_center_variables_", (DL_FUNC) &_capybara_center_variables_, 4},
    {"_capybara_get_alpha_",        (DL_FUNC) &_capybara_get_alpha_,        3},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_capybara(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
